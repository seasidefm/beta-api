generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Artist {
  id      Int     @id @default(autoincrement())
  name    String  @unique @db.VarChar(100)
  aliases String? @db.VarChar(256)
  songs   Song[]

  @@index([name, aliases], map: "artist")
}

model Song {
  id         Int        @id @default(autoincrement())
  song_title String
  artist_id  Int
  artists    Artist     @relation(fields: [artist_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_song_artist")
  favorites  Favorite[]

  PlaylistEntry PlaylistEntry[]
  @@unique([song_title, artist_id])
  @@index([artist_id], map: "fk_song_artist")
}

model Favorite {
  song      Int
  user      Int
  dateSaved DateTime @default(now())
  songData  Song     @relation(fields: [song], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_song")
  userData  User     @relation(fields: [user], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_user")

  @@unique([song, user], map: "song")
  @@index([user], map: "fk_user")
  @@index([song, user], map: "user_songs")
}

model PlaylistEntry {
  id        Int      @id @default(autoincrement())
  played_on DateTime @default(now())
  playing   Boolean  @default(false)
  song_id   Int
  song      Song     @relation(fields: [song_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_playlist_song")

  @@index([playing, song_id], map: "current_song")
}

model User {
  id        Int             @id @default(autoincrement())
  name      String          @unique(map: "name") @db.VarChar(45)
  favorites Favorite[]
  userLevel UserExperience?
}

model ExperienceLevel {
  id           Int    @id @default(autoincrement())
  level        Int
  name         String
  required_exp Int

  UserExperience UserExperience[]
  @@unique([level])
  @@unique([name])
  @@unique([required_exp])
}

model UserExperience {
  user             User            @relation(fields: [userId], references: [id])
  userId           Int
  level            Int             @default(0)
  experienceLevel  ExperienceLevel @relation(fields: [level], references: [level])
  total_experience Int

  @@unique([userId])
}

// API - Machine Access
// =========================

model MachineUser {
  name         String
  clientId     String @id
  clientSecret String

  @@unique([name])
}